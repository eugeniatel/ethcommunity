"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./utils/geocoding.ts":
/*!****************************!*\
  !*** ./utils/geocoding.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COUNTRY_COORDINATES: function() { return /* binding */ COUNTRY_COORDINATES; },\n/* harmony export */   geocodeLocation: function() { return /* binding */ geocodeLocation; }\n/* harmony export */ });\nconst COUNTRY_COORDINATES = {\n    // North America\n    \"USA\": [\n        39.8283,\n        -98.5795\n    ],\n    \"Canada\": [\n        56.1304,\n        -106.3468\n    ],\n    \"Mexico\": [\n        23.6345,\n        -102.5528\n    ],\n    \"El Salvador\": [\n        13.7942,\n        -88.8965\n    ],\n    \"Honduras\": [\n        15.2000,\n        -86.2419\n    ],\n    // South America\n    \"Argentina\": [\n        -38.4161,\n        -63.6167\n    ],\n    \"Brazil\": [\n        -14.2350,\n        -51.9253\n    ],\n    \"Peru\": [\n        -9.1900,\n        -75.0152\n    ],\n    \"Bolivia\": [\n        -16.2902,\n        -63.5887\n    ],\n    \"Uruguay\": [\n        -32.5228,\n        -55.7658\n    ],\n    // Europe\n    \"Bulgaria\": [\n        42.7339,\n        25.4858\n    ],\n    \"Czech Republic\": [\n        49.8175,\n        15.4730\n    ],\n    \"England\": [\n        52.3555,\n        -1.1743\n    ],\n    \"Estonia\": [\n        58.5953,\n        25.0136\n    ],\n    \"Ireland\": [\n        53.1424,\n        -7.6921\n    ],\n    \"Italy\": [\n        41.8719,\n        12.5674\n    ],\n    \"Netherlands\": [\n        52.1326,\n        5.2913\n    ],\n    \"Poland\": [\n        51.9194,\n        19.1451\n    ],\n    \"Romania\": [\n        45.9432,\n        24.9668\n    ],\n    \"Serbia\": [\n        44.0165,\n        21.0059\n    ],\n    \"Turkey\": [\n        38.9637,\n        35.2433\n    ],\n    // Asia\n    \"China\": [\n        35.8617,\n        104.1954\n    ],\n    \"Japan\": [\n        36.2048,\n        138.2529\n    ],\n    \"Taiwan\": [\n        23.5937,\n        120.9221\n    ],\n    \"UAE\": [\n        23.4241,\n        53.8478\n    ],\n    \"Saudi Arabia\": [\n        23.8859,\n        45.0792\n    ],\n    // Africa\n    \"Nigeria\": [\n        9.0820,\n        8.6753\n    ],\n    \"Ethiopia\": [\n        9.1450,\n        40.4897\n    ],\n    // Oceania\n    \"Australia\": [\n        -25.2744,\n        133.7751\n    ],\n    \"New Zealand\": [\n        -40.9006,\n        174.8860\n    ]\n};\nasync function geocodeLocation(city, country) {\n    try {\n        // Add a delay to respect rate limits\n        await new Promise((resolve)=>setTimeout(resolve, 1000));\n        const response = await fetch(\"https://nominatim.openstreetmap.org/search?\" + \"city=\".concat(encodeURIComponent(city), \"&\") + \"country=\".concat(encodeURIComponent(country), \"&\") + \"format=json&limit=1\", {\n            headers: {\n                \"User-Agent\": \"ETHCommunity/1.0\"\n            }\n        });\n        const data = await response.json();\n        if (data[0]) {\n            return {\n                lat: parseFloat(data[0].lat),\n                lng: parseFloat(data[0].lon)\n            };\n        }\n        return null;\n    } catch (error) {\n        console.error(\"Geocoding error:\", error);\n        return null;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3V0aWxzL2dlb2NvZGluZy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLE1BQU1BLHNCQUF3RDtJQUNuRSxnQkFBZ0I7SUFDaEIsT0FBTztRQUFDO1FBQVMsQ0FBQztLQUFRO0lBQzFCLFVBQVU7UUFBQztRQUFTLENBQUM7S0FBUztJQUM5QixVQUFVO1FBQUM7UUFBUyxDQUFDO0tBQVM7SUFDOUIsZUFBZTtRQUFDO1FBQVMsQ0FBQztLQUFRO0lBQ2xDLFlBQVk7UUFBQztRQUFTLENBQUM7S0FBUTtJQUUvQixnQkFBZ0I7SUFDaEIsYUFBYTtRQUFDLENBQUM7UUFBUyxDQUFDO0tBQVE7SUFDakMsVUFBVTtRQUFDLENBQUM7UUFBUyxDQUFDO0tBQVE7SUFDOUIsUUFBUTtRQUFDLENBQUM7UUFBUSxDQUFDO0tBQVE7SUFDM0IsV0FBVztRQUFDLENBQUM7UUFBUyxDQUFDO0tBQVE7SUFDL0IsV0FBVztRQUFDLENBQUM7UUFBUyxDQUFDO0tBQVE7SUFFL0IsU0FBUztJQUNULFlBQVk7UUFBQztRQUFTO0tBQVE7SUFDOUIsa0JBQWtCO1FBQUM7UUFBUztLQUFRO0lBQ3BDLFdBQVc7UUFBQztRQUFTLENBQUM7S0FBTztJQUM3QixXQUFXO1FBQUM7UUFBUztLQUFRO0lBQzdCLFdBQVc7UUFBQztRQUFTLENBQUM7S0FBTztJQUM3QixTQUFTO1FBQUM7UUFBUztLQUFRO0lBQzNCLGVBQWU7UUFBQztRQUFTO0tBQU87SUFDaEMsVUFBVTtRQUFDO1FBQVM7S0FBUTtJQUM1QixXQUFXO1FBQUM7UUFBUztLQUFRO0lBQzdCLFVBQVU7UUFBQztRQUFTO0tBQVE7SUFDNUIsVUFBVTtRQUFDO1FBQVM7S0FBUTtJQUU1QixPQUFPO0lBQ1AsU0FBUztRQUFDO1FBQVM7S0FBUztJQUM1QixTQUFTO1FBQUM7UUFBUztLQUFTO0lBQzVCLFVBQVU7UUFBQztRQUFTO0tBQVM7SUFDN0IsT0FBTztRQUFDO1FBQVM7S0FBUTtJQUN6QixnQkFBZ0I7UUFBQztRQUFTO0tBQVE7SUFFbEMsU0FBUztJQUNULFdBQVc7UUFBQztRQUFRO0tBQU87SUFDM0IsWUFBWTtRQUFDO1FBQVE7S0FBUTtJQUU3QixVQUFVO0lBQ1YsYUFBYTtRQUFDLENBQUM7UUFBUztLQUFTO0lBQ2pDLGVBQWU7UUFBQyxDQUFDO1FBQVM7S0FBUztBQUNyQyxFQUFDO0FBRU0sZUFBZUMsZ0JBQWdCQyxJQUFZLEVBQUVDLE9BQWU7SUFDakUsSUFBSTtRQUNGLHFDQUFxQztRQUNyQyxNQUFNLElBQUlDLFFBQVFDLENBQUFBLFVBQVdDLFdBQVdELFNBQVM7UUFFakQsTUFBTUUsV0FBVyxNQUFNQyxNQUNyQixnREFDQSxRQUFpQyxPQUF6QkMsbUJBQW1CUCxPQUFNLE9BQ2pDLFdBQXVDLE9BQTVCTyxtQkFBbUJOLFVBQVMsT0FDdEMsdUJBQ0Q7WUFDRU8sU0FBUztnQkFDUCxjQUFjO1lBQ2hCO1FBQ0Y7UUFHRixNQUFNQyxPQUFPLE1BQU1KLFNBQVNLLElBQUk7UUFFaEMsSUFBSUQsSUFBSSxDQUFDLEVBQUUsRUFBRTtZQUNYLE9BQU87Z0JBQ0xFLEtBQUtDLFdBQVdILElBQUksQ0FBQyxFQUFFLENBQUNFLEdBQUc7Z0JBQzNCRSxLQUFLRCxXQUFXSCxJQUFJLENBQUMsRUFBRSxDQUFDSyxHQUFHO1lBQzdCO1FBQ0Y7UUFDQSxPQUFPO0lBQ1QsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxvQkFBb0JBO1FBQ2xDLE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL2dlb2NvZGluZy50cz8wZWRmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBDT1VOVFJZX0NPT1JESU5BVEVTOiBSZWNvcmQ8c3RyaW5nLCBbbnVtYmVyLCBudW1iZXJdPiA9IHtcbiAgLy8gTm9ydGggQW1lcmljYVxuICAnVVNBJzogWzM5LjgyODMsIC05OC41Nzk1XSxcbiAgJ0NhbmFkYSc6IFs1Ni4xMzA0LCAtMTA2LjM0NjhdLFxuICAnTWV4aWNvJzogWzIzLjYzNDUsIC0xMDIuNTUyOF0sXG4gICdFbCBTYWx2YWRvcic6IFsxMy43OTQyLCAtODguODk2NV0sXG4gICdIb25kdXJhcyc6IFsxNS4yMDAwLCAtODYuMjQxOV0sXG5cbiAgLy8gU291dGggQW1lcmljYVxuICAnQXJnZW50aW5hJzogWy0zOC40MTYxLCAtNjMuNjE2N10sXG4gICdCcmF6aWwnOiBbLTE0LjIzNTAsIC01MS45MjUzXSxcbiAgJ1BlcnUnOiBbLTkuMTkwMCwgLTc1LjAxNTJdLFxuICAnQm9saXZpYSc6IFstMTYuMjkwMiwgLTYzLjU4ODddLFxuICAnVXJ1Z3VheSc6IFstMzIuNTIyOCwgLTU1Ljc2NThdLFxuXG4gIC8vIEV1cm9wZVxuICAnQnVsZ2FyaWEnOiBbNDIuNzMzOSwgMjUuNDg1OF0sXG4gICdDemVjaCBSZXB1YmxpYyc6IFs0OS44MTc1LCAxNS40NzMwXSxcbiAgJ0VuZ2xhbmQnOiBbNTIuMzU1NSwgLTEuMTc0M10sXG4gICdFc3RvbmlhJzogWzU4LjU5NTMsIDI1LjAxMzZdLFxuICAnSXJlbGFuZCc6IFs1My4xNDI0LCAtNy42OTIxXSxcbiAgJ0l0YWx5JzogWzQxLjg3MTksIDEyLjU2NzRdLFxuICAnTmV0aGVybGFuZHMnOiBbNTIuMTMyNiwgNS4yOTEzXSxcbiAgJ1BvbGFuZCc6IFs1MS45MTk0LCAxOS4xNDUxXSxcbiAgJ1JvbWFuaWEnOiBbNDUuOTQzMiwgMjQuOTY2OF0sXG4gICdTZXJiaWEnOiBbNDQuMDE2NSwgMjEuMDA1OV0sXG4gICdUdXJrZXknOiBbMzguOTYzNywgMzUuMjQzM10sXG5cbiAgLy8gQXNpYVxuICAnQ2hpbmEnOiBbMzUuODYxNywgMTA0LjE5NTRdLFxuICAnSmFwYW4nOiBbMzYuMjA0OCwgMTM4LjI1MjldLFxuICAnVGFpd2FuJzogWzIzLjU5MzcsIDEyMC45MjIxXSxcbiAgJ1VBRSc6IFsyMy40MjQxLCA1My44NDc4XSxcbiAgJ1NhdWRpIEFyYWJpYSc6IFsyMy44ODU5LCA0NS4wNzkyXSxcblxuICAvLyBBZnJpY2FcbiAgJ05pZ2VyaWEnOiBbOS4wODIwLCA4LjY3NTNdLFxuICAnRXRoaW9waWEnOiBbOS4xNDUwLCA0MC40ODk3XSxcblxuICAvLyBPY2VhbmlhXG4gICdBdXN0cmFsaWEnOiBbLTI1LjI3NDQsIDEzMy43NzUxXSxcbiAgJ05ldyBaZWFsYW5kJzogWy00MC45MDA2LCAxNzQuODg2MF1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlb2NvZGVMb2NhdGlvbihjaXR5OiBzdHJpbmcsIGNvdW50cnk6IHN0cmluZyk6IFByb21pc2U8eyBsYXQ6IG51bWJlcjsgbG5nOiBudW1iZXIgfSB8IG51bGw+IHtcbiAgdHJ5IHtcbiAgICAvLyBBZGQgYSBkZWxheSB0byByZXNwZWN0IHJhdGUgbGltaXRzXG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDEwMDApKTtcbiAgICBcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFxuICAgICAgYGh0dHBzOi8vbm9taW5hdGltLm9wZW5zdHJlZXRtYXAub3JnL3NlYXJjaD9gICsgXG4gICAgICBgY2l0eT0ke2VuY29kZVVSSUNvbXBvbmVudChjaXR5KX0mYCArXG4gICAgICBgY291bnRyeT0ke2VuY29kZVVSSUNvbXBvbmVudChjb3VudHJ5KX0mYCArXG4gICAgICBgZm9ybWF0PWpzb24mbGltaXQ9MWAsXG4gICAgICB7XG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnVXNlci1BZ2VudCc6ICdFVEhDb21tdW5pdHkvMS4wJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgKTtcblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgXG4gICAgaWYgKGRhdGFbMF0pIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGxhdDogcGFyc2VGbG9hdChkYXRhWzBdLmxhdCksXG4gICAgICAgIGxuZzogcGFyc2VGbG9hdChkYXRhWzBdLmxvbilcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0dlb2NvZGluZyBlcnJvcjonLCBlcnJvcik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn0gIl0sIm5hbWVzIjpbIkNPVU5UUllfQ09PUkRJTkFURVMiLCJnZW9jb2RlTG9jYXRpb24iLCJjaXR5IiwiY291bnRyeSIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsInJlc3BvbnNlIiwiZmV0Y2giLCJlbmNvZGVVUklDb21wb25lbnQiLCJoZWFkZXJzIiwiZGF0YSIsImpzb24iLCJsYXQiLCJwYXJzZUZsb2F0IiwibG5nIiwibG9uIiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/geocoding.ts\n"));

/***/ })

});